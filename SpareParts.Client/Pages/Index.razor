@page "/"

@inject IUserService UserService
@inject ILoadingIndicatorService LoadingIndicatorService

<PageTitle>Spare Parts</PageTitle>

<h1>Spare Parts</h1>

<div>
    <p>This is a simple application to spike/demo various Blazor + WebAPI features. </p>
    <p>*Not intended to be a real-world inventory system :-)</p>
    <p> Swagger API Documentation: <a href="/swagger">Swagger</a> </p>
    <p> GraphQL API Documentation (Hot Chocolate): <a href="/graphql">Banana Cake Pop</a></p>
    <p> Health Checks: <a href="/healthy">Health Checks</a></p>
</div>
<br>
<div class="card">
    <h3 class="card-header">*One time User/Role Setup</h3>
    <div class="card-body">
    <p>Click this to setup demo users and roles if this is the first time using this app.</p>
    <button class="btn btn-primary" @onclick="SetupUsersRoles">Setup</button>
    @if (!string.IsNullOrEmpty(_message))
    {
        <div class="mt-3">
            <p class="@_messageClass">@_message</p>
        </div>
    }
    </div>
</div>

@code{
    private bool _isSetup = false;
    private string _message = "";
    private string _messageClass => _isSetup ? "alert alert-success" : "alert alert-danger";

    private async Task SetupUsersRoles()
    {
        LoadingIndicatorService.SetIsLoading(true);
        _isSetup = await UserService.Setup();
        if (_isSetup)
        {
            _message = "Done!";
        }
        else
        {
            _message = "Something went wrong. Check the logs.";
        }
        LoadingIndicatorService.SetIsLoading(false);
    }
}