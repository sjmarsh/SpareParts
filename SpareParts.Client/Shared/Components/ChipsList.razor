@using System.Text;

<div class="card">
    <div class="card-body">
    @if (Chips != null && Chips.Any())
    {
        @if (!string.IsNullOrEmpty(Title))
        {
            <h6 class="card-subtitle mb-2 text-muted">@Title</h6>
        }
            
        @foreach (var chip in Chips)
        {
            <Tooltip TooltipContent="@chip.Tooltip">
                <span class="chip @GetChipClass(chip)">@chip.Name<span class="chip-icon"><a @onclick="() => HandleToggleChip(chip)"><span class="oi oi-circle-x"></span></a></span></span>
            </Tooltip>
        }
    }
    </div>
</div>

@code{

    [Parameter, EditorRequired]
    public List<Chip>? Chips { get; set; }

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public EventCallback<Chip> OnToggleChip { get; set; }

    private string GetChipClass(Chip chip)
    {
        var chipClass = chip.Color is null ? " chip-color-default" : $" chip-color-{chip.Color.ToLower()}";
        if(!chip.IsActive)
        {
            chipClass = $"{chipClass}-outlined";
        }
        return chipClass;
    }

    private async Task HandleToggleChip(Chip chip)
    {
        chip.IsActive = !chip.IsActive;
        await OnToggleChip.InvokeAsync(chip);
    }
}