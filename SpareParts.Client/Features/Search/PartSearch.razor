@page "/part-search"
@attribute [Authorize(Roles = Role.Administrator)]

@using SpareParts.Shared.Models

@inject IServiceWrapper ServiceWrapper
@inject ISearchService SearchService

<div>
    <h3>Part Search</h3>
    <FilterGrid T="Part" ServiceCall="@((request) => HandleServiceCall(request))" />
</div>

@code 
{
    private async Task<List<Part>> HandleServiceCall(GraphQLRequest request)
    {
        var partResponse = await ServiceWrapper.ServiceCall(() => SearchService.Search(request), "An error occurred searching for part.");
        if(partResponse != null && partResponse.Data != null && partResponse.Data.Parts != null)
        {
            return partResponse.Data.Parts;
        }
        return new List<Part>(); // TODO use generic result object
    }
}