@if (ShowModal)
{
    <div class="modal fade show custom-modal" aria-modal="true" role="dialog">
        <div class="modal-dialog @ModalClass">
            <div class="modal-content">

                @if(HeaderText != null)
                {
                    <div class="modal-header">
                        <h4 class="modal-title">@HeaderText</h4>
                        <button type="button" class="close" @onclick="@CloseModal">&times;</button>
                    </div>    
                }
                                
                <div class="modal-body">
                    @ChildContent
                </div>
                                
                <div class="modal-footer">
                    <button id="closeModal" type="button" class="btn btn-link" @onclick="@CloseModal">@CloseButtonText</button>
                </div>

            </div>
        </div>
    </div>
}

@code {

    [Parameter]
    public bool ShowModal { get; set; }

    [Parameter]
    public string? ModalClass { get; set; }

    [Parameter]
    public string? HeaderText { get; set; }

    [Parameter]
    public string CloseButtonText { get; set; } = "Close";

    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }  //NB. this must be called ChildContent for Blazor

    private async Task CloseModal() {
        if (OnClose.HasDelegate)
        {
            await OnClose.InvokeAsync();    
        }
        ShowModal = false; 
    }   
}
